class Fraction{
    field int numerator,denominator;

    constructor Fraction new(int x,int y){
        let numerator=x;
        let denominator=y;
        do reduce();
        return this;
    }

    method int getNumerator(){return numerator;}
    method int getDenominator(){return denominator;}

    method void reduce(){
        //化简分数
        var int g;
        let g=Fraction.gcd(numerator,denominator);
        if(g>1){
            let numerator=numerator/g;
            let denominator=denominator/g;
        }
        return ;

    }
    method void print(){
        //打印分数
        do Output.printInt(numerator);
        do Output.printString("/");
        do Output.printInt(denominator);
        return;
    }

    method Fraction plus(Fraction f){
        var Fraction result;
        let result=Fraction.new((numerator*f.getDenominator())+(denominator*f.getNumerator()),denominator*f.getDenominator());
        return result;
    }

    method void dispose(Fraction f){
        do Memory.deAlloc(this);
        return;
    
    }

    function int gcd(int a,int b){
        //求最大公约数
        var int temp;
        let temp=a;
        while(~(temp=0)){
            let temp=a-((a/b)*b);
            let a=b;
            let b=temp;
        }
        return a;
    }   

}